openapi: 3.0.3
info:
  title: ProCat
  description: |-
    OpenAPI documentation for ProCat application
  version: 1.0.0
servers:
  - url: 'localhost:8080'

tags:
  - name: user
    description: all operations on user
  - name: auth
    description: authorization operations
  - name: verification
    description: verification operations
  - name: userInfoChange
    description: operations that changes user info
  - name: deliveryman
    description: deliveryman operations
  - name: delivery
    description: operations on deliveries + route creation
  - name: admin
    description: admin functionality
  - name: cart
    description: cart operations
  - name: order
    description: orders operations
  - name: payment
    description: payment operations
  - name: subscription
    description: subs operations
  - name: notification
    description: notifications operations
  - name: category
    description: categories operations
  - name: item
    description: items operations
  - name: stockOfItem
    description: operations on stocks of the item
  - name: infoOfItem
    description: operations on infos of the item
  - name: imageOfItem
    description: operations on images of the item
  - name: store
    description: stores operations

paths:
  /users:
    get:
      deprecated: false
      tags:
        - user
      summary: to get all users
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 50
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 2
        - name: role
          in: query
          required: false
          schema:
            type: string
            example: user
            enum:
              - user
              - deliveryman
              - moderator
              - admin
        - name: isConfirmed
          in: query
          required: false
          schema:
            type: boolean
            example: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 122
                      rows:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      deprecated: false
      tags:
        - user
      summary: for simple user only for his page
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of user that needs to be fetched, user's id must equal to {userId}
          schema:
            type: integer
            example: 848
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    $ref: '#/components/schemas/User'
        400:
          description: Invalid ID supplied
        404:
          description: User not found

    delete:
      deprecated: false
      tags:
        - user
      summary: only for admin
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of user that needs to be fetched
          schema:
            type: integer
            example: 848
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
        400:
          description: Invalid ID supplied
        404:
          description: User not found

  /users/logout:
    post:
      tags:
        - auth
      summary: deletes refresh token from db [Requires Auth header with Access Token]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjA2ODU4MzQsImlhdCI6MTcxNTUwMTgzNCwidXNlcklkIjoxMDB9.-uqsK1tTSjh1amOch1NhyaCoAQGr4YRUjt936WH43gM

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: string
                    example: null

  /users/refresh:
    post:
      tags:
        - auth
      summary: refresh token pair
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjA2OTQ2ODksImp0aSI6IjU1NWQ0OWYzLTJjYzAtNDU0MC04Nzk5LTQwNGQ5Zjg2OGU4NiIsImlhdCI6MTcxNTUxMDY4OSwidXNlcklkIjoxMDB9.0ZiP5vw_1K6s-vGgbjjn4xY9TfaVEeqxOCy9uXRjYL0
                fingerprint:
                  type: string
                  example: 541AF321CD12321
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                      refreshToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"

  /users/sign-in:
    post:
      tags:
        - auth
      summary: phoneNumber + password + fingerprint
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                  example: +79000000000
                password:
                  type: string
                  example: kvmkd5lskdm
                fingerprint:
                  type: string
                  example: 541AF321CD12321
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                      refreshToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"

  /users/sign-up:
    post:
      tags:
        - auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  example: Name Surname
                phoneNumber:
                  type: string
                  example: +79000000000
                password:
                  type: string
                  example: 56354dfs
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 856

  /users/verification/send:
    post:
      deprecated: true
      tags:
        - verification
      summary: creates new verification code for certain user and his existing info with {type}
      description: |-
        Actually resends confirmation code to the user.
        
        You should login first, then confirm your data, otherwise account will be deleted
        after 15 minutes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: password
                  enum:
                    - password
                    - phone
                    - email
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'

  /users/verification/check:
    post:
      deprecated: true
      tags:
        - verification
      summary: checks whether code matches or not + check on lifetime of code if all is well then update user info, otherwise - user can try again if code lifetime is still available
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 123dxc
                type:
                  type: string
                  example: password
                  enum:
                    - password
                    - phone
                    - email
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/verification/iin:
    post:
      deprecated: true
      tags:
        - verification
      summary: additional endpoint, because this functionality will be used in {users/orders/POST} handler
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                iin:
                  type: string
                  example: 760724300757
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/change/iin-bin:
    post:
      deprecated: false
      tags:
        - userInfoChange
      summary: check on iin correctness and matching with full name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: 12345678
                identificationNumber:
                  type: string
                  example: 68845645778
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'

  /users/change/fullname:
    post:
      deprecated: false
      tags:
        - userInfoChange
      summary: if success, then iin-bin := null, and it's needed to be filled
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: 12345678
                fullName:
                  type: string
                  example: Name Surname
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/change/password:
    post:
      deprecated: false
      tags:
        - userInfoChange
      summary: check if old passwords match, then send confirmation code on current number
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  example: 12345678
                newPassword:
                  type: string
                  example: 87654321
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'

  /users/change/phone:
    post:
      deprecated: false
      tags:
        - userInfoChange
      summary: check password and send confirmation code on new number
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: 12345678
                phoneNumber:
                  type: string
                  example: +79000000000
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/change/email:
    post:
      deprecated: false
      tags:
        - userInfoChange
      summary: check password and send confirmation code on new email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: 12345678
                email:
                  type: string
                  example: example@mail.ru
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/change/role/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    patch:
      deprecated: false
      tags:
        - userInfoChange
      summary: change role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  example: new role
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/deliverymen:
    get:
      tags:
        - deliveryman
      summary: get all deliverymen
      parameters:
        - name: limit
          in: query
          required: false

          schema:
            type: integer
            default: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 4
                      rows:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              format: int64
                              example: 125
                            carCapacity:
                              type: string
                              example: 4?
                            workingHoursStart:
                              type: string
                              format: time
                              example: 2023-11-04T08:00:00Z
                            workingHoursEnd:
                              type: string
                              format: time
                              example: 2023-11-04T16:00:00Z
                            carId:
                              type: string
                              example: P425YB154
                            fullName:
                              type: string
                              example: Иванов Иван Иванович
                            email:
                              type: string
                              example: pochta@gmail.com
                            phoneNumber:
                              type: string
                              example: +79163125366
  /users/deliverymen/{deliveryId}:
    get:
      tags:
        - deliveryman
      summary: for simple user to get his deliveryman page
      parameters:
        - name: deliveryId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      carCapacity:
                        type: string
                        example: big
                      workingHoursStart:
                        type: string
                        example: 2023-11-04T08:00:00Z
                      workingHoursEnd:
                        type: string
                        example: 2023-11-04T16:00:00Z
                      carId:
                        type: string
                        example: P425YB154
  /users/deliverymen/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          example: 856
    post:
      tags:
        - deliveryman
      summary: create new deliveryman
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                carCapacity:
                  type: string
                  example: big
                workingHoursStart:
                  type: string
                  example: 08:00:00
                workingHoursEnd:
                  type: string
                  example: 16:00:00
                carId:
                  type: string
                  example: HT236O154
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 533
    patch:
      tags:
        - deliveryman
      summary: to change data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                carCapacity:
                  type: string
                  example: big
                workingHoursStart:
                  type: string
                  example: 08:00:00
                workingHoursEnd:
                  type: string
                  example: 16:00:00
                carId:
                  type: string
                  example: HT236O154
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/deliverymen/{deliverymanId}:
    parameters:
      - name: deliverymanId
        in: path
        required: true
        schema:
          type: integer
          example: 858
    delete:
      tags:
        - deliveryman
      summary: to delete deliveryman
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/deliverymen/deliveries:
    get:
      tags:
        - delivery
      summary: to get list of all deliveries for ADMIN
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: status
          in: query
          schema:
            type: array
            items:
              type: string
          explode: false
          style: form
          examples:
            oneTag:
              value: [ "awaitingPayment" ]
            multipleTags:
              value: [ "readyToDelivery", "readyForPickup" ]
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 12
                      rows:
                        type: array
                        items:
                          $ref: '#/components/schemas/DeliveryAdmin'
  /users/deliverymen/deliveries/{deliverymanId}:
    get:
      tags:
        - delivery
      summary: GET - to get all deliveries for {deliverymanId}
      parameters:
        - name: deliverymanId
          in: path
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: status
          in: query
          schema:
            type: array
            items:
              type: string
          explode: false
          style: form
          examples:
            oneTag:
              value: [ "awaitingPayment" ]
            multipleTags:
              value: [ "readyToDelivery", "readyForPickup" ]
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 12
                      rows:
                        type: array
                        items:
                          $ref: '#/components/schemas/Delivery'
  /users/deliverymen/deliveries/delivery/{deliveryId}:
    parameters:
      - name: deliveryId
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - delivery
      summary: GET - get delivery by deliveryId
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    $ref: '#/components/schemas/Delivery'
  /users/deliverymen/deliveries/{deliveryId}:
    parameters:
      - name: deliveryId
        in: path
        required: true
        schema:
          type: integer
    patch:
      tags:
        - delivery
      summary: change status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: delivered
                  enum:
                    - awaitingPayment
                    - accepted
                    - awaitingRejection
                    - awaitingMoneyBack
                    - rejected
                    - readyToPickup
                    - readyToDelivery
                    - delivering
                    - rent
                    - shouldBeReturned
                    - expired
                    - extensionRequest
                    - extended
                    - problem
                    - deliveryBack
                    - returned
                    - itemsCheck
                    - awaitingRepairPayment
                    - closed
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/deliverymen/deliveries/create-route:
    post:
      deprecated: false
      tags:
        - delivery
      summary: build a route from deliveryman's deliveries
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      points:
                        type: array
                        items:
                          properties:
                            orderId:
                              type: integer
                              example: 45
                            lat:
                              type: string
                              example: 54.99770587584445
                            lon:
                              type: string
                              example: 82.79502868652345
  /users/admin/cluster:
    post:
      deprecated: false
      tags:
        - admin
      summary: make clustering orders for deliveryman
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      result:
                        type: array
                        items:
                          properties:
                            deliverymanId:
                              type: integer
                              example: 456
                            deliveries:
                              type: array
                              items:
                                properties:
                                  address:
                                    type: string
                                    example: адрес
                                  latitude:
                                    type: string
                                    example: 55.072470687600536
                                  longitude:
                                    type: string
                                    example: 83.04634094238281
                                  deliveryId:
                                    type: integer
                                    example: 45

  /users/admin/deliveries-to-sort:
    get:
      tags:
        - admin
      summary: GET all deliveries that are needed to be sorted
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 10
                      rows:
                        type: array
                        items:
                          properties:
                            deliverymanId:
                              type: integer
                              example: 456
                            deliveries:
                              type: array
                              items:
                                properties:
                                  address:
                                    type: string
                                    example: адрес
                                  latitude:
                                    type: string
                                    example: 55.072470687600536
                                  longitude:
                                    type: string
                                    example: 83.04634094238281
                                  deliveryId:
                                    type: integer
                                    example: 45
  /users/admin/change-delivery:
    patch:
      tags:
        - admin
      summary: change status of corresponding order to 'readyToDelivery' and maybe changes 'deliveryman_id'
      description: if want change deliveryman -> send deliverymanId, otherwise - do not
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deliveryId:
                  type: integer
                  example: 564
                deliverymanId:
                  type: integer
                  example: 58
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/cart:
    get:
      deprecated: false
      tags:
        - cart
      summary: get items from the cart
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/ItemMini'
    post:
      deprecated: false
      tags:
        - cart
      summary: adds item with {itemId} with probably {count} to authorized user with {usedId}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: integer
                  example: 32
                count:
                  type: integer
                  example: 2
                  default: 1
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'

  /users/cart/{itemId}:
    delete:
      deprecated: false
      tags:
        - cart
      summary: decreases item (with {itemId}) number in cart by one or totally deletes item from the cart
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            example: 45
        - name: count
          in: query
          required: false
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/orders:
    get:
      deprecated: false
      tags:
        - order
      summary: get all orders (if userId passed -> if you're 'admin', then 'get all orders for userId', else 'userId must be equal to your id'; if userId wasn't passed -> if you're 'admin', then 'get all orders', else 'get orders for yourself')
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: userId
          in: query
          required: false
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: array
            items:
              type: string
          explode: false
          style: form
          examples:
            oneTag:
              value: [ "awaitingPayment" ]
            multipleTags:
              value: [ "readyToDelivery", "readyForPickup" ]
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 45
                      rows:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              format: int64
                              example: 526
                            status:
                              type: string
                              example: delivering
                              enum:
                                - awaitingPayment
                                - accepted
                                - awaitingRejection
                                - awaitingMoneyBack
                                - rejected
                                - readyToPickup
                                - readyToDelivery
                                - delivering
                                - rent
                                - shouldBeReturned
                                - expired
                                - extensionRequest
                                - extended
                                - problem
                                - deliveryBack
                                - returned
                                - itemsCheck
                                - awaitingRepairPayment
                                - closed
                            totalPrice:
                              type: integer
                              example: 5000
                            deposit:
                              type: integer
                              example: 20000
                            rentalPeriodStart:
                              type: string
                              format: date-time
                              example: 2023-10-19T00:00:00Z
                            rentalPeriodEnd:
                              type: string
                              format: date-time
                              example: 2023-11-04T00:00:00Z
                            address:
                              type: string
                              example: ул. Пушкина д. 7 кв. 587
                            latitude:
                              type: string
                              example: 55.042779
                            longitude:
                              type: string
                              example: 82.994966
                            companyName:
                              type: string
                              example: Строим с радостью
                            createdAt:
                              type: string
                              format: date-time
                              example: 2023-11-04T00:00:00Z
                            userId:
                              type: integer
                              example: 2
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  name:
                                    type: string
                                    example: Молоток
                                  price:
                                    type: integer
                                    example: 2000
                                  priceDeposit:
                                    type: integer
                                    example: 10000
                                  count:
                                    type: integer
                                    example: 2
                                  image:
                                    type: string
                                    example: pic-dasdca-sdca-ssada.png

    post:
      deprecated: false
      tags:
        - order
      summary: creates new order and transfer all items from cart to this order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rentalPeriodStart:
                  type: string
                  example: 2023-10-19 20:30:00
                rentalPeriodEnd:
                  type: string
                  example: 2023-10-27 20:30:00
                address:
                  type: string
                  example: ул. Пушкина д. 7 кв. 587
                companyName:
                  type: string
                  example: SOME COMP INC.
                deliveryMethod:
                  type: string
                  example: by car
                deliveryTimeStart:
                  type: string
                  example: 2023-10-18 18:00:00
                deliveryTimeEnd:
                  type: string
                  example: 2023-10-18 20:00:00
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      orderId:
                        type: integer
                        example: 45
                      totalPrice:
                        type: integer
                        example: 2000
                      deposit:
                        type: integer
                        example: 20000
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Молоток
                            count:
                              type: integer
                              example: 2
                            price:
                              type: integer
                              example: 1000
                            priceDeposit:
                              type: integer
                              example: 10000
  /users/orders/{orderId}:
    parameters:
      - name: orderId
        in: path
        required: true
        description: order id
        schema:
          type: integer
    get:
      deprecated: false
      tags:
        - order
      summary: get certain order
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                        example: 526
                      status:
                        type: string
                        example: delivering
                        enum:
                          - awaitingPayment
                          - accepted
                          - awaitingRejection
                          - awaitingMoneyBack
                          - rejected
                          - readyToPickup
                          - readyToDelivery
                          - delivering
                          - rent
                          - shouldBeReturned
                          - expired
                          - extensionRequest
                          - extended
                          - problem
                          - deliveryBack
                          - returned
                          - itemsCheck
                          - awaitingRepairPayment
                          - closed
                      totalPrice:
                        type: integer
                        example: 5000
                      deposit:
                        type: integer
                        example: 20000
                      rentalPeriodStart:
                        type: string
                        format: date-time
                        example: 2023-10-19T00:00:00Z
                      rentalPeriodEnd:
                        type: string
                        format: date-time
                        example: 2023-11-04T00:00:00Z
                      address:
                        type: string
                        example: ул. Пушкина д. 7 кв. 587
                      latitude:
                        type: string
                        example: 55.042779
                      longitude:
                        type: string
                        example: 82.994966
                      companyName:
                        type: string
                        example: Строим с радостью
                      createdAt:
                        type: string
                        format: date-time
                        example: 2023-10-19T00:00:00Z
                      userId:
                        type: integer
                        example: 2
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: Молоток
                            price:
                              type: integer
                              example: 2000
                            priceDeposit:
                              type: integer
                              example: 10000
                            count:
                              type: integer
                              example: 2
                            image:
                              type: string
                              example: pic-dasdca-sdca-ssada.png

  /users/orders/cancel/{orderId}:
    parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          example: 54
    patch:
      deprecated: false
      tags:
        - order
      summary: set status to "awaitingRejection", waits till admin do some stuff and then set status of order to "rejected"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/orders/status/{orderId}:
    parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          example: 542
    patch:
      deprecated: false
      tags:
        - order
      summary: for ADMIN to change status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                    - awaitingPayment
                    - accepted
                    - awaitingRejection
                    - awaitingMoneyBack
                    - rejected
                    - readyToPickup
                    - readyToDelivery
                    - delivering
                    - rent
                    - shouldBeReturned
                    - expired
                    - extensionRequest
                    - extended
                    - problem
                    - deliveryBack
                    - returned
                    - itemsCheck
                    - awaitingRepairPayment
                    - closed
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'

  /users/orders/payment/{orderId}:
    get:
      deprecated: false
      tags:
        - payment
      summary: to get info about order's payments (only for owner user or ADMIN)
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            example: 898
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      payments:
                        type: array
                        items:
                          properties:
                            id:
                              type: integer
                              example: 5
                            paid:
                              type: integer
                              example: 0
                            method:
                              type: string
                              enum:
                                - cash
                                - kaspi
                            price:
                              type: integer
                              example: 4500
                            createdAt:
                              type: string
                              example: 2023-10-19T10:23:54Z
  /users/orders/payment/{paymentId}:
    parameters:
      - name: paymentId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    patch:
      deprecated: false
      tags:
        - payment
      summary: update payment info (for deliveryman (maybe ADMIN?) or higher)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                paid:
                  type: integer
                  example: 1000
                method:
                  type: string
                  enum:
                    - cash
                    - kaspi
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/subscriptions:
    get:
      deprecated: true
      tags:
        - subscription
      summary: get all subs for self user
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 15
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 2
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 89
                      rows:
                        type: array
                        items:
                          properties:
                            id:
                              type: integer
                              example: 5
                            item:
                              $ref: '#/components/schemas/ItemMiniSub'
    post:
      deprecated: true
      tags:
        - subscription
      summary: add {itemId} to subs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: integer
                  example: 459
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/subscriptions/{subscriptionId}:
    parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          type: integer
          example: 89
    delete:
      deprecated: true
      tags:
        - subscription
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/notifications:
    get:
      deprecated: true
      tags:
        - notification
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      notifications:
                        type: array
                        items:
                          $ref: '#/components/schemas/Notification'
  /users/notifications/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          example: 848
    post:
      deprecated: true
      tags:
        - notification
      summary: send notification to user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Hello
                description:
                  type: string
                  example: It's me!!!
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /users/notifications/{notificationId}:
    parameters:
      - name: notificationId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    patch:
      deprecated: true
      tags:
        - notification
      summary: to open and read notification
      description: request belongs to patch because this will change "isViewed" DB field
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    $ref: '#/components/schemas/Notification'
    delete:
      deprecated: true
      tags:
        - notification
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /categories/{categoryId}:
    parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: integer
          example: 0
    post:
      deprecated: true
      tags:
        - category
      summary: create category with parent id equals to{categoryId}, 0 - root category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: name
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20
    get:
      deprecated: true
      tags:
        - category
      summary: get all categories with {categoryId} parent id
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          $ref: '#/components/schemas/Category'
    patch:
      deprecated: true
      tags:
        - category
      summary: edit name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: new name
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'

    delete:
      deprecated: true
      tags:
        - category
      summary: delete all route if it's not a leaf in the category tree

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'

  /categories/route/{categoryId}:
    parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: integer
          example: 547
    get:
      deprecated: true
      tags:
        - category
      summary: get category route
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      route:
                        type: array
                        items:
                          $ref: '#/components/schemas/Category'
  /items:
    get:
      deprecated: false
      tags:
        - item
      summary: get all items
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: categoryId
          in: query
          required: false
          schema:
            type: integer
        - name: stock
          in: query
          required: false
          description: false - for all, true - for only in stock
          schema:
            type: boolean
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 120
                      rows:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              format: int64
                              example: 852
                            name:
                              type: string
                              example: Молток
                            description:
                              type: string
                              example: Качественный, крепкий, удобный очень
                            price:
                              type: integer
                              example: 3000
                            isInStock:
                              type: boolean
                              example: true
                            categoryId:
                              type: integer
                              format: int64
                              example: 58
                            categoryName:
                              type: string
                              example: Категория
                            image:
                              type: string
                              example: pic.jpg

    post:
      deprecated: false
      tags:
        - item
      summary: FORM-DATA HERE!!!, for ADMIN, only for main info, another fields will be filled by another requests
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                name:
                  type: string
                  example: Новое имя
                description:
                  type: string
                  example: Новое описание
                price:
                  type: integer
                  example: 2500
                priceDeposit:
                  type: integer
                  example: 25000
                categoryId:
                  type: integer
                  example: 0
                images:
                  type: array
                  items:
                    properties:
                      image:
                        type: string
                        example: image.jpg
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123

  /items/{itemId}:
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: integer
    get:
      deprecated: false
      tags:
        - item
      summary: get one item
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    $ref: '#/components/schemas/Item'
    delete:
      deprecated: false
      tags:
        - item
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
    patch:
      deprecated: false
      summary: FORM-DATA HERE!!! all fields are optional
      tags:
        - item
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                name:
                  type: string
                  example: Новое имя
                description:
                  type: string
                  example: Новое описание
                price:
                  type: integer
                  example: 2500
                priceDeposit:
                  type: integer
                  example: 2500
                categoryId:
                  type: integer
                  example: 0
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'

  /items/stock/{itemId}:
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    put:
      deprecated: true
      tags:
        - stockOfItem
      summary: creates stock in some {storeId} or changes stock if relation exists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                storeId:
                  type: integer
                  example: 524
                inStockNumber:
                  type: integer
                  example: 5
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /items/infos/{itemId}:
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: integer
          example: 65
    post:
      deprecated: true
      tags:
        - infoOfItem
      summary: add array of characteristics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                info:
                  type: array
                  items:
                    properties:
                      name:
                        type: string
                        example: name
                      description:
                        type: string
                        example: description
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
    delete:
      deprecated: true
      tags:
        - infoOfItem
      summary: delete infos with ids in array (array provided in query params)
      parameters:
        - name: tags
          in: query
          required: false
          description: One or more tags
          schema:
            type: array
            items:
              type: integer
          explode: false
          style: form
          examples:
            oneTag:
              value: [ 52 ]
            multipleTags:
              value: [ 52, 85, 45 ]
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
    patch:
      deprecated: true
      tags:
        - infoOfItem
      summary: array with new data and ids which will be changed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                info:
                  type: array
                  items:
                    properties:
                      id:
                        type: integer
                        example: 56
                      name:
                        type: string
                        example: name
                      description:
                        type: string
                        example: description
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /items/images/{itemId}:
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: integer
          example: 78
    post:
      deprecated: true
      tags:
        - imageOfItem
      summary: to add images to item
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: object
                    properties:
                      image:
                        type: string
                        example: h.jpg
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
    delete:
      deprecated: true
      tags:
        - imageOfItem
      summary: deletes images with certain ids
      parameters:
        - name: images
          in: query
          required: false
          description: One or more tags
          schema:
            type: array
            items:
              type: string
          explode: false
          style: form
          examples:
            oneTag:
              value: [ 'pic1.jpg' ]
            multipleTags:
              value: [ 'pic2.jpg', 'pic5.jpg', 'pic8.jpg' ]
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
  /stores:
    get:
      deprecated: true
      tags:
        - store
      summary: to get all stores
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                          example: 56
                        name:
                          type: string
                          example: name
                        address:
                          type: string
                          example: address
                        latitude:
                          type: string
                          example: 123.32131
                        longitude:
                          type: string
                          example: 123.32131
                        workingHoursStart:
                          type: string
                          example: 8:00
                        workingHoursEnd:
                          type: string
                          example: 20:00
    post:
      deprecated: true
      tags:
        - store
      summary: creates new store and finds it's coordinates according to the address
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: name
                address:
                  type: string
                  example: name
                workingHoursStart:
                  type: string
                  example: 8:00
                workingHoursEnd:
                  type: string
                  example: 20:00
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: ok
                  payload:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 65
  /stores/{storeId}:
    parameters:
      - name: storeId
        in: path
        required: true
        schema:
          type: integer
          example: 56
    patch:
      deprecated: true
      tags:
        - store
      summary: updates latLon if address changes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: name
                address:
                  type: string
                  example: name
                workingHoursStart:
                  type: string
                  example: 8:00
                workingHoursEnd:
                  type: string
                  example: 20:00
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
    delete:
      deprecated: true
      tags:
        - store
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCode200'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 848
        fullName:
          type: string
          example: Вадимов Вадим Вадимович
        email:
          type: string
          example: vadim@mail.ru
        phoneNumber:
          type: string
          example: +79856523652
        identificationNumber:
          type: string
          example: 3256328745698
        isConfirmed:
          type: boolean
          example: true
        role:
          type: string
          example: user
          enum:
            - user
            - deliveryman
            - moderator
            - admin
        createdAt:
          type: string
          format: date-time
          example: 2004-10-19T18:00:00Z

    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 526
        status:
          type: string
          example: delivering
          enum:
            - awaitingPayment
            - accepted
            - awaitingRejection
            - awaitingMoneyBack
            - rejected
            - readyToPickup
            - readyToDelivery
            - delivering
            - rent
            - shouldBeReturned
            - expired
            - extensionRequest
            - extended
            - problem
            - deliveryBack
            - returned
            - itemsCheck
            - awaitingRepairPayment
            - closed
        totalPrice:
          type: integer
          example: 5000
        rentalPeriodStart:
          type: string
          format: date-time
          example: 2023-10-19T00:00:00Z
        rentalPeriodEnd:
          type: string
          format: date-time
          example: 2023-11-04T00:00:00Z
        address:
          type: string
          example: ул. Пушкина д. 7 кв. 587
        latitude:
          type: string
          example: 55.042779
        longitude:
          type: string
          example: 82.994966
        companyName:
          type: string
          example: Строим с радостью
        createdAt:
          type: string
          format: date-time
          example: 2023-11-04T00:00:00Z
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemMini'

    ItemMini:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Молоток
        price:
          type: integer
          example: 5000
        count:
          type: integer
          example: 4
        image:
          type: string

    ItemMiniSub:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Молоток
        price:
          type: integer
          example: 5000
        isInStock:
          type: boolean
          example: true
        image:
          type: string

    Delivery:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 523
        timeStart:
          type: string
          format: date-time
          example: 2023-10-19T10:00:00Z
        timeEnd:
          type: string
          format: date-time
          example: 2023-10-19T12:00:00Z
        method:
          type: string
          example: car
        order:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 526
            status:
              type: string
              example: delivering
              enum:
                - awaitingPayment
                - accepted
                - awaitingRejection
                - awaitingMoneyBack
                - rejected
                - readyToPickup
                - readyToDelivery
                - delivering
                - rent
                - shouldBeReturned
                - expired
                - extensionRequest
                - extended
                - problem
                - deliveryBack
                - returned
                - itemsCheck
                - awaitingRepairPayment
                - closed
            totalPrice:
              type: integer
              example: 5000
            address:
              type: string
              example: ул. Пушкина д. 7 кв. 587
            latitude:
              type: string
              example: 55.042779
            longitude:
              type: string
              example: 82.994966

    DeliveryAdmin:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 523
        timeStart:
          type: string
          format: date-time
          example: 2023-10-19T10:00:00Z
        timeEnd:
          type: string
          format: date-time
          example: 2023-10-19T12:00:00Z
        method:
          type: string
          example: car
        deliverymanId:
          type: integer
          example: 2
        order:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 526
            status:
              type: string
              example: delivering
              enum:
                - awaitingPayment
                - accepted
                - awaitingRejection
                - awaitingMoneyBack
                - rejected
                - readyToPickup
                - readyToDelivery
                - delivering
                - rent
                - shouldBeReturned
                - expired
                - extensionRequest
                - extended
                - problem
                - deliveryBack
                - returned
                - itemsCheck
                - awaitingRepairPayment
                - closed
            totalPrice:
              type: integer
              example: 5000
            address:
              type: string
              example: ул. Пушкина д. 7 кв. 587
            latitude:
              type: string
              example: 55.042779
            longitude:
              type: string
              example: 82.994966

    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 85
        name:
          type: string
          example: Категория
        parentId:
          type: integer
          format: int64
          example: 52

    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 852
        name:
          type: string
          example: Молток
        description:
          type: string
          example: Качественный, крепкий, удобный очень
        price:
          type: integer
          example: 3000
        isInStock:
          type: boolean
          example: true
        categoryId:
          type: integer
          format: int64
          example: 58
        categoryName:
          type: string
          example: Категория
        info:
          type: array
          items:
            $ref: '#/components/schemas/Info'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ItemImage'
        itemStores:
          type: array
          items:
            $ref: '#/components/schemas/ItemStock'

    ItemStock:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 259
        inStockNumber:
          type: integer
          example: 5
        name:
          type: string
          example: Склад ПроКат №1
        address:
          type: string
          example: ул. Хорошая, д. 12
        workingHoursStart:
          type: string
          example: 2023-11-04T08:00:00Z
        workingHoursEnd:
          type: string
          example: 2023-11-04T20:00:00Z


    ItemImage:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 248
        image:
          type: string
          example: tool.jpg

    Info:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 785
        name:
          type: string
          example: Вес
        description:
          type: string
          example: 12 кг

    Notification:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 536
        title:
          type: string
          example: Новое сообщение
        description:
          type: string
          example: Заходите скорее почитайте
        isViewed:
          type: boolean
          example: true
        createdAt:
          format: date-time
          example: 2023-11-04T08:00:00Z

    StatusCode200:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: ok
        payload:
          type: string
          example: null